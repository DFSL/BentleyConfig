%YAML 1.2
---
name: BentleyConfig
file_extensions: [cfg,ucf,pcf]
scope: source.bentleyconfig

contexts:
  prototype:
    - include: comments

  main:
    - include: variableExprEval
    - include: variableDirectives
    - include: assignments
    - include: conditionals
    - include: variableName
  
  variableName:
    - match: ^\s*\w+
      scope: variable.other.readwrite.bentleyconfig

  variableDirectives:
    - match: '(%lock|%undef|%level)'
      scope: variable.function.bentleyconfig
      push: variableDirectivesParam

  variableDirectivesParam:
    - match: \w+
      scope: variable.parameter.bentleyconfig
      pop: true

  conditionals:
    - match: '(%if|%ifdef|ifndef)'
      scope: keyword.control.conditional
      push: conditionalBody

  conditionalBody:
    - include: variableExprEval
    - include: assignmentStatements
    - match: '%else'
      scope: keyword.control.conditional
    - match: '%elif'
      scope: keyword.control.conditional
      push: conditionals
    - match: '%endif'
      scope: keyword.control.conditional
      pop: true
    - match: '(defined|exists)\('
      scope: variable.function.bentleyconfig
      push: boolFunction

  boolFunction:
    - include: variableExprEval
    - match: \)
      scope: variable.function.bentleyconfig
      pop: true


  comments:
    - match: '#.*'
      scope: comment.line.bentleyconfig

  assignments:
    - match: (=|:|<|>|\+)
      scope: keyword.operator.bentleyconfig
      push: assignmentStatements

  assignmentStatements:
    - include: variableExprEval
    - include: fileName
    - include: pathName
    - match: (#|\n) 
      pop: true

  fileName:
    - match: '[-\w]+\.\w+'
      scope: string.unquoted

  pathName:
    - match: '(\w:\\)?([-\w]+\\)*[-\w]+/'
      scope: string.unquoted

  variableExprEval:
    - include: variableExprEvalVerbatim
    - include: variableExprEvalImmediate

  variableExprEvalVerbatim:
    - match: \$\(
      scope: variable.function.bentleyconfig
      push: variableExprEvalParamVerbatim

  variableExprEvalParamVerbatim:
    - match: \w+ 
      scope: variable.parameter.bentleyconfig
      set: variableExprEvalEndVerbatim

  variableExprEvalEndVerbatim:
    - match: \)
      scope: variable.function.bentleyconfig
      pop: true

  variableExprEvalImmediate:
    - match: \$\{
      scope: variable.function.bentleyconfig
      push: variableExprEvalParamImmediate

  variableExprEvalParamImmediate:
    - match: \w+ 
      scope: variable.parameter.bentleyconfig
      set: variableExprEvalEndImmediate

  variableExprEvalEndImmediate:
    - match: \}
      scope: variable.function.bentleyconfig
      pop: true

